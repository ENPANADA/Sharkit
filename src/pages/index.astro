---
import Layout from "@layouts/App.astro";
import Footer from "@components/Footer.astro";
import { IconSharKit, IconArrowRight, Wave } from "@lib/Icons";
import { svgToDataUrl } from "@utils/IconsService";
import { HOME_COMPONENT_URL } from "@config/routes";
import { COLORS } from "@config/global";

const wave = svgToDataUrl(Wave, { fill: COLORS.accent });
---

<Layout>
  <section>
    <figure>
      <figcaption>
        <IconSharKit />
        <h1>Sharkit</h1>
      </figcaption>
      <p>
        An agile and flexible solution of <strong>vanilla components</strong>,
        ready to integrate into your projects <span
          >without external libraries</span
        >.
      </p>
      <a href={HOME_COMPONENT_URL}>Get started<IconArrowRight fill="none" /></a>
    </figure>
  </section>
  <main>
    <!-- <p>
      Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero laborum
      repellendus est. Ratione nulla aliquam tenetur error illum illo, explicabo
      unde accusantium. Ea facilis, dolores sapiente beatae esse omnis
      provident.
    </p> -->
  </main>
  <Footer />
</Layout>

<style define:vars={{ wave }}>
  section {
    min-height: 100vh;
    display: grid;
    place-content: center;
    position: relative;
    background-color: rgb(0 0 0 / 20%);

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      z-index: -1;
      filter: blur(80px);

      background:
        no-repeat
          radial-gradient(
            ellipse at center,
            rgb(136 58 234 / 60%) 0%,
            transparent 70%
          ),
        no-repeat
          radial-gradient(
            ellipse at center,
            rgb(102 51 238 / 60%) 0%,
            transparent 70%
          ),
        no-repeat
          radial-gradient(
            ellipse at center,
            rgb(49 10 101) 40%,
            transparent 70%
          ),
        no-repeat
          radial-gradient(
            ellipse at center,
            rgb(54, 0, 90) 20%,
            transparent 70%
          )
          rgb(8 0 30);
      background-size:
        50% 90%,
        50% 90%,
        50% 90%,
        50% 90%;
      background-position:
        -100% 0%,
        150% -500%,
        -100% 200%,
        0% 0%;

      animation: translate-main-bg 30s infinite;
    }
  }

  figcaption {
    position: relative;

    h1 {
      margin: 0;
      width: 100%;
      font-family: "Archivo Black", system-ui, sans-serif;
      font-size: 120px;
      text-transform: uppercase;
      background-image: var(--wave);
      background-clip: text;
      overflow: hidden;
      color: rgb(var(--accent-secondary));
      background-size: 200px 0px;
      background-repeat: repeat-x;
      background-position: 0 bottom;
      position: relative;
      z-index: 1;
      transform: skewX(-20deg);
      animation:
        show 1s ease-out,
        wave 1s 4 linear,
        fill 3s linear forwards 1s;

      &::after {
        position: absolute;
        content: "";
        inset: 0;
        background-image: var(--lg);
        animation: show-text 0.5s forwards 1s;
      }
    }

    svg {
      position: absolute;
      bottom: -80px;
      left: -90px;
      color: rgb(var(--accent-light));
      height: 400px;
      stroke-width: 2px;
      stroke-dashoffset: 700;
      stroke-dasharray: 700;
      animation:
        draw 2s ease-in forwards 1.5s,
        move 10s linear infinite 4s;

      path {
        animation: neon 3s infinite alternate 4s;
      }

      path:nth-child(2) {
        animation-delay: 5.5s;
      }
      path:nth-child(3) {
        animation-delay: 6s;
      }
      path:nth-child(4) {
        animation-delay: 6.5s;
      }
    }
  }

  figure {
    width: min-content;
    display: flex;
    flex-direction: column;
    gap: 30px;

    p {
      z-index: 1;
      font-size: 30px;
      margin: 0;
      opacity: 0;
      transform: translateY(30px);
      animation: show-paragraph 0.5s 3s forwards;

      strong {
        animation: change-color 1s 3.2s forwards;
      }

      span {
        position: relative;

        &::before {
          content: "";
          position: absolute;
          background-color: rgb(var(--accent) / 70%);
          inset: 0;
          z-index: -1;
          animation: show-text 1s 3s reverse both;
        }
      }
    }

    a {
      text-decoration: none;
      font-weight: 300;
      align-self: flex-start;
      position: relative;
      padding: 12px 30px;
      border: solid 2px rgb(var(--accent-light));
      font-size: 18px;
      color: inherit;
      cursor: pointer;
      overflow: hidden;
      user-select: none;
      letter-spacing: 2px;
      opacity: 0;
      transform: translateX(150%);
      display: inline-flex;
      align-items: center;
      gap: 5px;
      animation:
        show-button 1.5s 3.5s forwards,
        rubberBand 13s infinite 5.2s;

      svg {
        height: 20px;
        width: 25px;
        stroke-width: 40px;
        stroke-dashoffset: 1700;
        stroke-dasharray: 1700;
        animation: draw-arrow 1.5s forwards 3.8s;
      }

      &::before {
        content: "";
        position: absolute;
        inset: 0;
        z-index: -1;
        border-radius: inherit;
        background-image: var(--lg2);
        background-size: 200% 100%;
        filter: blur(8px);
        animation: translate-bg 2s linear infinite reverse;
        animation-play-state: paused;
      }

      &:hover::before {
        animation-play-state: running;
      }
    }
  }

  @keyframes show-button {
    20%,
    100% {
      opacity: 1;
      transform: translateX(0);
    }
    100% {
      border-radius: 40px;
    }
  }

  @keyframes show {
    from {
      width: 0;
      transform: translateY(200%);
    }
  }

  @keyframes show-text {
    to {
      left: 100%;
    }
  }

  @keyframes show-paragraph {
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes wave {
    to {
      background-position: 200px bottom;
    }
  }

  @keyframes fill {
    to {
      color: transparent;
      text-shadow: 0 0 rgb(var(--accent-light) / 80%);
      background-size: 200px 200px;
    }
  }

  @keyframes draw {
    to {
      stroke-dashoffset: 0;
      color: rgb(var(--accent-secondary));
    }
  }

  @keyframes draw-arrow {
    50% {
      stroke-dashoffset: 0;
    }
    50%,
    to {
      fill: rgb(var(--accent-light));
    }
    from,
    40% {
      fill: transparent;
    }
    to {
      stroke-dashoffset: -1700;
    }
  }

  @keyframes move {
    50% {
      transform: skewY(3deg);
    }
  }

  @keyframes neon {
    95% {
      color: rgb(var(--accent));
      filter: drop-shadow(0 0 3px rgb(var(--accent)));
    }
    100% {
      color: rgb(var(--accent-light) / 80%);
      filter: drop-shadow(0 0 5px rgb(var(--accent-light)));
    }
  }

  @keyframes change-color {
    100% {
      color: rgb(var(--accent));
      text-shadow: 0 0 15px rgb(var(--accent-secondary));
    }
  }

  @keyframes translate-bg {
    100% {
      background-position: 200% 0%;
    }
  }

  @keyframes translate-main-bg {
    50% {
      background-position:
        200% 600%,
        -100% 500%,
        100% 0%,
        500% 400%;
    }
  }

  @keyframes rubberBand {
    from,
    10%,
    to {
      transform: scaleX(1);
    }
    3% {
      transform: scale3d(1.25, 0.75, 1);
    }
    4% {
      transform: scale3d(0.75, 1.25, 1);
    }
    5% {
      transform: scale3d(1.15, 0.85, 1);
    }
    6.5% {
      transform: scale3d(0.95, 1.05, 1);
    }
    7.5% {
      transform: scale3d(1.05, 0.95, 1);
    }
  }
</style>
