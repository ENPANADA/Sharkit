---
import Layout from "@layouts/Main.astro";
import CodeBlock from "@components/CodeBlock.astro";
import Navigation from "@components/Navigation.astro";
import { IconCopy } from "@lib/Icons";
import {
  getComponentDataByLink,
  getPreviousAndNextComponentsDataByIndex,
} from "@utils/CollectionsService";

const codes = await Astro.glob("@data/codes/**/*.md");
const [data, index] = getComponentDataByLink(
  Astro.url.pathname.split("/").at(-1) as string
);
const [previous, next] = getPreviousAndNextComponentsDataByIndex(index);
---

<Layout>
  <article>
    <slot />
    <h3>Code</h3>
    <section>
      {
        () => {
          if (data) {
            return (
              <CodeBlock {data}>
                {codes.map((code) => {
                  if (code.file.split("/").includes(data.link)) {
                    return (
                      <div>
                        <button data-copy2clipboard>
                          <IconCopy />
                        </button>
                        <code.default />
                      </div>
                    );
                  }
                })}
              </CodeBlock>
            );
          }
        }
      }
    </section>
    <slot name="after" />
    <Navigation {previous} {next} />
  </article>
</Layout>

<style>
  article {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    align-items: center;

    section {
      background: var(--lg5);
      box-shadow: rgb(var(--bg-dark)) 6px 6px 12px;
      border-radius: 15px;
      padding: 15px;
      max-width: var(--max-width-content);
      box-sizing: border-box;
    }

    h3 {
      margin: 0;
      align-self: flex-start;
      background: var(--lg);
      background-clip: text;
      color: transparent;
      font-size: 25px;
      font-family: "Archivo Black";
    }
  }

  section{
    width: fit-content;
  }
</style>

<script>
  const buttons = document.querySelectorAll("[data-copy2clipboard]");
  buttons.forEach((btn) => {
    btn.addEventListener("click", (e) => {
      const code = btn.parentElement?.querySelector("pre")?.textContent;
      const copy = e.target as HTMLButtonElement;
      const currentColor = copy.style.color;
      copy.disabled = true;
      navigator.clipboard
        .writeText(code as string)
        .then(() => true)
        .catch((err) => {
          console.error("Error copying:", err);
          return false;
        })
        .then((res) => {
          copy.style.color = res ? "transparent" : "rgb(var(--error))";
          res && copy.style.setProperty("--opacity", "1");
          setTimeout(() => {
            copy.style.color = currentColor;
            res && copy.style.removeProperty("--opacity");
            copy.disabled = false;
          }, 1000);
        });
    });
  });
</script>